// Code generated from JestDiff.g4 by ANTLR 4.9.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 15, 158,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3,
	8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 12, 7, 12, 96, 10, 12, 12, 12, 14, 12, 99, 11, 12, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 13, 5, 13, 106, 10, 13, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 5, 17, 119, 10, 17,
	3, 17, 3, 17, 3, 17, 6, 17, 124, 10, 17, 13, 17, 14, 17, 125, 5, 17, 128,
	10, 17, 3, 17, 5, 17, 131, 10, 17, 3, 18, 3, 18, 3, 18, 7, 18, 136, 10,
	18, 12, 18, 14, 18, 139, 11, 18, 5, 18, 141, 10, 18, 3, 19, 3, 19, 5, 19,
	145, 10, 19, 3, 19, 3, 19, 3, 20, 5, 20, 150, 10, 20, 3, 20, 6, 20, 153,
	10, 20, 13, 20, 14, 20, 154, 3, 20, 3, 20, 2, 2, 21, 3, 3, 5, 4, 7, 5,
	9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 2, 27, 2,
	29, 2, 31, 2, 33, 14, 35, 2, 37, 2, 39, 15, 3, 2, 10, 10, 2, 36, 36, 49,
	49, 94, 94, 100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 50,
	59, 67, 72, 99, 104, 5, 2, 2, 33, 36, 36, 94, 94, 3, 2, 50, 59, 3, 2, 51,
	59, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47, 5, 2, 11, 12, 15, 15,
	34, 34, 2, 163, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2,
	9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2,
	2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2,
	2, 2, 33, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 3, 41, 3, 2, 2, 2, 5, 50, 3, 2,
	2, 2, 7, 52, 3, 2, 2, 2, 9, 54, 3, 2, 2, 2, 11, 56, 3, 2, 2, 2, 13, 64,
	3, 2, 2, 2, 15, 66, 3, 2, 2, 2, 17, 71, 3, 2, 2, 2, 19, 77, 3, 2, 2, 2,
	21, 82, 3, 2, 2, 2, 23, 92, 3, 2, 2, 2, 25, 102, 3, 2, 2, 2, 27, 107, 3,
	2, 2, 2, 29, 113, 3, 2, 2, 2, 31, 115, 3, 2, 2, 2, 33, 118, 3, 2, 2, 2,
	35, 140, 3, 2, 2, 2, 37, 142, 3, 2, 2, 2, 39, 149, 3, 2, 2, 2, 41, 42,
	7, 81, 2, 2, 42, 43, 7, 100, 2, 2, 43, 44, 7, 108, 2, 2, 44, 45, 7, 103,
	2, 2, 45, 46, 7, 101, 2, 2, 46, 47, 7, 118, 2, 2, 47, 48, 7, 34, 2, 2,
	48, 49, 7, 125, 2, 2, 49, 4, 3, 2, 2, 2, 50, 51, 7, 46, 2, 2, 51, 6, 3,
	2, 2, 2, 52, 53, 7, 127, 2, 2, 53, 8, 3, 2, 2, 2, 54, 55, 7, 60, 2, 2,
	55, 10, 3, 2, 2, 2, 56, 57, 7, 67, 2, 2, 57, 58, 7, 116, 2, 2, 58, 59,
	7, 116, 2, 2, 59, 60, 7, 99, 2, 2, 60, 61, 7, 123, 2, 2, 61, 62, 7, 34,
	2, 2, 62, 63, 7, 93, 2, 2, 63, 12, 3, 2, 2, 2, 64, 65, 7, 95, 2, 2, 65,
	14, 3, 2, 2, 2, 66, 67, 7, 118, 2, 2, 67, 68, 7, 116, 2, 2, 68, 69, 7,
	119, 2, 2, 69, 70, 7, 103, 2, 2, 70, 16, 3, 2, 2, 2, 71, 72, 7, 104, 2,
	2, 72, 73, 7, 99, 2, 2, 73, 74, 7, 110, 2, 2, 74, 75, 7, 117, 2, 2, 75,
	76, 7, 103, 2, 2, 76, 18, 3, 2, 2, 2, 77, 78, 7, 112, 2, 2, 78, 79, 7,
	119, 2, 2, 79, 80, 7, 110, 2, 2, 80, 81, 7, 110, 2, 2, 81, 20, 3, 2, 2,
	2, 82, 83, 7, 119, 2, 2, 83, 84, 7, 112, 2, 2, 84, 85, 7, 102, 2, 2, 85,
	86, 7, 103, 2, 2, 86, 87, 7, 104, 2, 2, 87, 88, 7, 107, 2, 2, 88, 89, 7,
	112, 2, 2, 89, 90, 7, 103, 2, 2, 90, 91, 7, 102, 2, 2, 91, 22, 3, 2, 2,
	2, 92, 97, 7, 36, 2, 2, 93, 96, 5, 25, 13, 2, 94, 96, 5, 31, 16, 2, 95,
	93, 3, 2, 2, 2, 95, 94, 3, 2, 2, 2, 96, 99, 3, 2, 2, 2, 97, 95, 3, 2, 2,
	2, 97, 98, 3, 2, 2, 2, 98, 100, 3, 2, 2, 2, 99, 97, 3, 2, 2, 2, 100, 101,
	7, 36, 2, 2, 101, 24, 3, 2, 2, 2, 102, 105, 7, 94, 2, 2, 103, 106, 9, 2,
	2, 2, 104, 106, 5, 27, 14, 2, 105, 103, 3, 2, 2, 2, 105, 104, 3, 2, 2,
	2, 106, 26, 3, 2, 2, 2, 107, 108, 7, 119, 2, 2, 108, 109, 5, 29, 15, 2,
	109, 110, 5, 29, 15, 2, 110, 111, 5, 29, 15, 2, 111, 112, 5, 29, 15, 2,
	112, 28, 3, 2, 2, 2, 113, 114, 9, 3, 2, 2, 114, 30, 3, 2, 2, 2, 115, 116,
	10, 4, 2, 2, 116, 32, 3, 2, 2, 2, 117, 119, 7, 47, 2, 2, 118, 117, 3, 2,
	2, 2, 118, 119, 3, 2, 2, 2, 119, 120, 3, 2, 2, 2, 120, 127, 5, 35, 18,
	2, 121, 123, 7, 48, 2, 2, 122, 124, 9, 5, 2, 2, 123, 122, 3, 2, 2, 2, 124,
	125, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 126, 128,
	3, 2, 2, 2, 127, 121, 3, 2, 2, 2, 127, 128, 3, 2, 2, 2, 128, 130, 3, 2,
	2, 2, 129, 131, 5, 37, 19, 2, 130, 129, 3, 2, 2, 2, 130, 131, 3, 2, 2,
	2, 131, 34, 3, 2, 2, 2, 132, 141, 7, 50, 2, 2, 133, 137, 9, 6, 2, 2, 134,
	136, 9, 5, 2, 2, 135, 134, 3, 2, 2, 2, 136, 139, 3, 2, 2, 2, 137, 135,
	3, 2, 2, 2, 137, 138, 3, 2, 2, 2, 138, 141, 3, 2, 2, 2, 139, 137, 3, 2,
	2, 2, 140, 132, 3, 2, 2, 2, 140, 133, 3, 2, 2, 2, 141, 36, 3, 2, 2, 2,
	142, 144, 9, 7, 2, 2, 143, 145, 9, 8, 2, 2, 144, 143, 3, 2, 2, 2, 144,
	145, 3, 2, 2, 2, 145, 146, 3, 2, 2, 2, 146, 147, 5, 35, 18, 2, 147, 38,
	3, 2, 2, 2, 148, 150, 9, 8, 2, 2, 149, 148, 3, 2, 2, 2, 149, 150, 3, 2,
	2, 2, 150, 152, 3, 2, 2, 2, 151, 153, 9, 9, 2, 2, 152, 151, 3, 2, 2, 2,
	153, 154, 3, 2, 2, 2, 154, 152, 3, 2, 2, 2, 154, 155, 3, 2, 2, 2, 155,
	156, 3, 2, 2, 2, 156, 157, 8, 20, 2, 2, 157, 40, 3, 2, 2, 2, 15, 2, 95,
	97, 105, 118, 125, 127, 130, 137, 140, 144, 149, 154, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'Object {'", "','", "'}'", "':'", "'Array ['", "']'", "'true'", "'false'",
	"'null'", "'undefined'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "STRING", "NUMBER", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "STRING", "ESC", "UNICODE", "HEX", "SAFECODEPOINT", "NUMBER", "INT",
	"EXP", "WS",
}

type JestDiffLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewJestDiffLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *JestDiffLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewJestDiffLexer(input antlr.CharStream) *JestDiffLexer {
	l := new(JestDiffLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "JestDiff.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JestDiffLexer tokens.
const (
	JestDiffLexerT__0   = 1
	JestDiffLexerT__1   = 2
	JestDiffLexerT__2   = 3
	JestDiffLexerT__3   = 4
	JestDiffLexerT__4   = 5
	JestDiffLexerT__5   = 6
	JestDiffLexerT__6   = 7
	JestDiffLexerT__7   = 8
	JestDiffLexerT__8   = 9
	JestDiffLexerT__9   = 10
	JestDiffLexerSTRING = 11
	JestDiffLexerNUMBER = 12
	JestDiffLexerWS     = 13
)
